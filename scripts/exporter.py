import sys
from pathlib import Path
import argparse
import os

#from lib.markdown_exporter import MarkdownExporter
#from lib.cherry_exporter import CherryExporter
from lib.gitbook_exporter import GitbookExporter

def parser_error(errmsg):
    print("Usage: python3 " + sys.argv[0] + " [Options] use -h for help")
    print("Error: " + errmsg)
    sys.exit()

def parse_args():
    default_findings_path = os.path.normpath(os.path.realpath(os.path.dirname(__file__)) + "/../findings/")
    default_techniques_path = os.path.normpath(os.path.realpath(os.path.dirname(__file__)) + "/../techniques/")
    default_playbooks_path = os.path.normpath(os.path.realpath(os.path.dirname(__file__)) + "/../playbooks/")
    default_export_directory = os.path.normpath(os.path.realpath(os.path.dirname(__file__)) + "/../export/")

    # parse the arguments
    parser = argparse.ArgumentParser(epilog='\tExample: \r\npython3 ' + sys.argv[0] + " -m ")
    parser.error = parser_error
    parser._optionals.title = "OPTIONS"
    parser.add_argument('-t', default='gitbook', help='markdown, cherry, gitbook')
    parser.add_argument('--techniques-path', help="techniques directory path", default=default_techniques_path)
    parser.add_argument('--findings-path', help="findings directory path", default=default_findings_path)
    parser.add_argument('--playbooks-path', help="playbooks directory path", default=default_playbooks_path)
    parser.add_argument('--export-directory', help="export directory", default=default_export_directory)
    return parser.parse_args()

if __name__ == '__main__':
    args = parse_args()

    #fields_to_include (default)
    fti_playbooks = ['id','title','test_description','references','steps','block_name','test_name',
                            'test_action','findings','comments']
    fti_techiques = ['id', 'title','description','references','steps','comments']
    fti_findings = ['id','title','description','risk','mitigations','references','evidences']

    # if args.t == 'markdown':
    #     subdir = 'md'
    #     exporter = MarkdownExporter(
    #         techniques_path=args.techniques_path, 
    #         findings_path=args.findings_path, 
    #         playbooks_path=args.playbooks_path
    #     )

    # elif args.t == 'cherry':
    #     subdir = 'cherry'
    #     exporter = CherryExporter(
    #         techniques_path=args.techniques_path, 
    #         findings_path=args.findings_path, 
    #         playbooks_path=args.playbooks_path
    #     )

    if args.t == 'gitbook':
        #export_dir = os.path.join(args.export_directory, 'gitbook')
        export_dir = args.export_directory
        exporter = GitbookExporter(
            techniques_path=args.techniques_path, 
            findings_path=args.findings_path, 
            playbooks_path=args.playbooks_path,
            fti_playbooks=fti_playbooks, 
            fti_techiques=fti_techiques, 
            fti_findings=fti_findings
        )

        exporter.export(
            export_directory_path=export_dir
        )

    else:
        print ('Unsupported exporter')
        sys.exit(1)
