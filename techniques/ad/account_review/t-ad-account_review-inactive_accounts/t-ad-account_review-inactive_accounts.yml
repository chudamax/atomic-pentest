title: Inactive Accounts
category: 
  - AD:
    - Account Review
tactic: Discovery
tags: []
credits: []
description:
  - title: 
    content: Having inactive accounts enabled can increase the organization's attack surface and create potential 
      entry points for attackers. These accounts may still have valid login credentials, and if the passwords 
      are weak or compromised, attackers could use them to gain unauthorized access to sensitive data or systems.

      Additionally, former employees could potentially use old credentials to access network resources 
      and engage in malicious activity.
steps:
  - title: Identify accounts that have been inactive for more than 6 months
    description:
    options: 
      - tool: Powershell AD Module
        usage: |
          Import-Module ActiveDirectory
          Get-ADUser -Filter * -Properties LastLogonDate | ? { $_.LastLogonDate -lt (get-date).AddDays(-180) -and ($_.LastLogonDate -ne $NULL) -and ($_.Enabled -eq $TRUE) -and $_.DistinguishedName -notlike "*HealthMailbox*"} | Format-Table -AutoSize -Property sAMAccountName, LastLogonDate
        comments:
          - You can add "| Measure-Object" to the powershell command to get a total number of the accounts
        references:
          - type: image
            value: inactive_accounts.png

      - tool: bloodhound
        usage: MATCH (u:User) WHERE u.lastlogon < (datetime().epochseconds - (180 * 86400)) and NOT u.lastlogon IN [-1.0, 0.0] RETURN u.name,datetime({epochSeconds:toInteger(u.lastlogontimestamp)})
