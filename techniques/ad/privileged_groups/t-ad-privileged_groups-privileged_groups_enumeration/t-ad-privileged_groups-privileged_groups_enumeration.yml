title: Check for Accounts In Privileged Groups
category: 
  - AD:
    - Account Review
    - Privileged Groups
tactic: Discovery
tags: []
related_techniques:
  - id: T-privilege_escalation-win-ad-backup_operators_group
  - id: T-privilege_escalation-win-ad-dnsadmins_group

description: |
  Membership to the groups "Schema Admins" and "Enterprise Admins" are not required for everyday use,
  as they are only required to make changes to the domain or forest in very rare cases.

  Domain Admins, Backup Operators, DNS Admins groups are also very high privileged. Each of these 
  accounts may have the ability to completely compromise the domain.

  Check for Accounts In Privileged Groups: Domain Admins, Enterprise Admins, Schema Admins, 
  DnsAdmins, Backup Operators.

  Ensure security measures for privileged accounts are in place.

  Privileged accounts should be reserved for administrative tasks, while non-privileged accounts should be used 
  for regular activities, like logging into workstations and checking email.

  Additionally, privileged accounts should be included in the AD "Protected Users" group. 
  The Protected Users group offers extra protections to accounts, such as preventing authentication using NTLM,
  restricting  delegation, blocking DES and RC4 encryption, etc.

references:
  - https://book.hacktricks.xyz/windows-hardening/active-directory-methodology/privileged-groups-and-token-privileges

steps:
  - description: Enumerate users in privileged AD groups.
    options:
      - tool: powershell_ad_module
        usage: |
          Get-ADGroupMember -Identity "Domain Admins" -Recursive
          Get-ADGroupMember -Identity "Enterprise Admins" -Recursive
          Get-ADGroupMember -Identity "Schema Admins" -Recursive
          Get-ADGroupMember -Identity "DnsAdmins" -Recursive
          Get-ADGroupMember -Identity "Backup Operators" -Recursive
        comments:
          - You can add "| Measure-Object" to the powershell command to get a total number of the accounts

      - tool: bloodhound
        usage: |
          MATCH (u:User)-[:MemberOf]->(g:Group {name:'ENTERPRISE ADMINS@DOMAIN.COM'}) return u.name, u.displayname
          MATCH (u:User)-[:MemberOf]->(g:Group {name:'SCHEMA ADMINS@DOMAIN.COM'}) return u.name, u.displayname
          MATCH (u:User)-[:MemberOf]->(g:Group {name:'DOMAIN ADMINS@DOMAIN.COM'}) return u.name, u.displayname
          MATCH (u:User)-[:MemberOf]->(g:Group {name:'DNSADMINS@DOMAIN.COM'}) return u.name, u.displayname
          MATCH (u:User)-[:MemberOf]->(g:Group {name:'BACKUP OPERATORS@DOMAIN.COM'}) return u.name, u.displayname
        comments:
          - domain groups and the domain name should be in uppercase

      - tool: ldapsearch
        usage: |
          ldapsearch -x ldap://<dc_ip> -D "<user@domain.com>" -w '<password>' -b "DC=<domain,DC=com>" -b "(memberOf:1.2.840.113556.1.4.1941:=cn=Enterprise Admins,cn=Users,dc=hpbank,dc=local)" sAMAccountName | grep sAMAccountName
          ldapsearch -x ldap://<dc_ip> -D "<user@domain.com>" -w '<password>' -b "DC=<domain,DC=com>" -b "(memberOf:1.2.840.113556.1.4.1941:=cn=Schema Admins,cn=Users,dc=hpbank,dc=local)" sAMAccountName | grep sAMAccountName
          ldapsearch -x ldap://<dc_ip> -D "<user@domain.com>" -w '<password>' -b "DC=<domain,DC=com>" -b "(memberOf:1.2.840.113556.1.4.1941:=cn=Domain Admins,cn=Users,dc=hpbank,dc=local)" sAMAccountName | grep sAMAccountName
          ldapsearch -x ldap://<dc_ip> -D "<user@domain.com>" -w '<password>' -b "DC=<domain,DC=com>" -b "(memberOf:1.2.840.113556.1.4.1941:=cn=DNSAdmins,cn=Users,dc=hpbank,dc=local)" sAMAccountName | grep sAMAccountName
          ldapsearch -x ldap://<dc_ip> -D "<user@domain.com>" -w '<password>' -b "DC=<domain,DC=com>" -b "(memberOf:1.2.840.113556.1.4.1941:=cn=Backup Operators,cn=Users,dc=hpbank,dc=local)" sAMAccountName | grep sAMAccountName
        comments: 

  - description: Check if privileged accounts are member of the "Protected Users" AD group.
    options:
      - tool: powershell_ad_module
        usage: Get-ADGroupMember -Identity "Protected Users" -Recursive
        comments: 
          - If the "Protected Users" group is empty - it should be reported.
      - tool: bloodhound
        usage: MATCH (u:User)-[:MemberOf]->(g:Group {name:'PROTECTED USERS@DOMAIN.COM'}) return u.name, u.displayname
        comments:
      - tool: ldapsearch
        usage: ldapsearch -x ldap://<dc_ip> -D "<user@domain.com>" -w '<password>' -b "DC=<domain,DC=com>" -b "(memberOf:1.2.840.113556.1.4.1941:=cn=Protected Users,cn=Users,dc=hpbank,dc=local)" sAMAccountName | grep sAMAccountName
        comments: 
  
  - description: Check if the administrators have separated accounts for administrative and usual tasks
    options:
      - tool: manually
        usage: | 
          For example, if John Smith has a normal user account of "jsmith" and there is a corresponding 
          acount in the "Domain Admins" group called "_jsmith" or "jsmithADM", then they are likely 
          separate accounts for the same user. If not, or there is no obvious separation of privileged 
          from non-privileged accounts, then there is a risk that some users are using a privileged account 
          for everyday activities such as checking emails or browsing the internet.
        comments: 

comments:
  