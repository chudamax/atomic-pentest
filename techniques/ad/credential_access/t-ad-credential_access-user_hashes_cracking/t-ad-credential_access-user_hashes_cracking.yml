title: Crack user hashes locally
category: 
  - AD:
    - Credential Access
tactic: Credential Access
tags: []
description: Crack user hashes locally
references:
  - https://github.com/t3l3machus/psudohash
  - https://docs.google.com/spreadsheets/d/1qQNwggWIWtL-m0EYrRg_vdwHOrZCY-SnWcYTwQN0fMk/edit?gid=524870023#gid=524870023

steps:

  - description: Crack the hashes using basic dictionaries
    options: 
      - tool: hashcat
        usage: hashcat -O -m <hashtype> hash.txt /usr/share/wordlists/rockyou.txt --force
        comments: 
      
      - tool: john
        usage: john -w=/usr/share/wordlists/rockyou.txt hash.txt 
        comments: 
  
  - description: Try to use rules
    options: 
      - tool: hashcat
        usage: hashcat -O -m <hashtype> -r rules/dive.rule hash.txt /usr/share/wordlists/rockyou.txt --force
        comments: 
  
  - description: Try to use pattern-based password list generators
    options: 
      - tool: psudohash
        usage: psudohash.py -w 'company' --common-paddings-after --common-paddings-before -y 2020,2023
        comments:
        
  - description: Try to use different wordlists

comments: |
  Hashcat hash types (https://hashcat.net/wiki/doku.php?id=example_hashes):

  #AR-REQ Roasting
  7500 - Kerberos 5, etype 23 (RC4), Pre-Auth (3599.6 MH/s RTX4090)
  19800 - Kerberos, etype 17 (AES128), Pre-Auth (5135.3 kH/s RTX4090)
  19900 - Kerberos, etype 18 (AES256), Pre-Auth (2571.6 kH/s RTX4090)

  #Kerberoasting 
  13100 - Kerberos 5, etype 23, TGS-REP #3478.0 MH/s on RTX4090
  19600 - Kerberos 5, etype 17, TGS-REP (AES128-CTS-HMAC-SHA1-96) #5100.2 kH/s on RTX4090
  19700 - Kerberos 5, etype 18, TGS-REP (AES256-CTS-HMAC-SHA1-96) #2562.9 kH/s on RTX4090

  #AS-REP roasting
  18200	Kerberos 5, etype 23 (RC4), AS-REP, 3564.1 MH/s on RTX4090

  #Wordlists

  #Rules